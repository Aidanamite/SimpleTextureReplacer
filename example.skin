{ // This file is in JSON format and any text after a // is comment that doesn't need to be included in your file
	"Name": "Skin Name Here", // This is the display name of the skin
	"ItemID": 1000000, // This must be unique. It cannot be the same as another item from the game or another pack's skin/saddle. It's recommend to mention your pack ids when sharing the pack
	"SkinIcon": "RS_SHARED/customassets/IconName", // This is the bundle resource url used for fetching the skin's icon. The "RS_SHARED/customassets" bundle *must* be used for adding new icons
	"TargetRenderers": [ "DragonRendererName" ], // This is name of the dragon's renderer component. Try checking out other item's data using "DEBUG" mode to see what you should set this to
	"MaterialData": [ // This controls the properties set on the different materials of the skin. You can set as many properties as you want here. Note: If no teen values are given, the game will use the adult material data for teens
		// Look to the shaders section for a list of material properties
		{
			"Target": "Adult", // This controls which material the property is set on. This must specify the age it's being applied to "Baby", "Teen", "Adult" or "Titan", then it can be followed by "Eye", "Body", "Extra", "All" or nothing. If it's followed by nothing, it will affect both eyes and body materials
			"Property": "_DetailTex", // This is the target property of the material
			"Value": "RS_SHARED/mydragonskins/my_textureName" // To specify a texture you put in the asset url of the texture
		},
		{
			"Target": "AdultBody",
			"Property": "_SpecColor",
			"Value": "333333" // To specify a color, use the color's hex string. It can either be "RRGGBB" or "AARRGGBB"
		},
		{
			"Target": "TitanEye",
			"Property": "_Glossiness",
			"Value": "0.9" // Despite being a number, you still need to write the number in " "
		},
		{
			"Target": "TeenExtra",
			"Property": "_SomeProperty",
			"Value": "[10,5,2,1]" // For vector values, you need to have [ ] around them and , between each value. Also, it must still have the " "
			// Extra Note: Color values can be written as a vector and vis versa
		}
	],
	"HWMaterialData": [ // Optional: This is used to set the appearance of the skin in the hidden world. If not included, it will use the default hidden world skin. If left empty "[]", it will just keep the skin enabled in the hidden world. If material data is provided, it will add those properties to the skin when entering the hidden world
		{
			"Target": "Adult",
			"Property": "_MKGlowTex",
			"Value": "RS_SHARED/mydragonskins/glow_tex"
		},
		{
			"Target": "Adult",
			"Property": "_MKGlowPower",
			"Value": "0.2"
		}
	],
	"PetType": 111, // This is the "pet type id" of the type of dragon this skin can be equipped on. Try checking out other item's data using "DEBUG" mode to see what you should set this to
	"Mesh": { // Optional: This is used to set the skin's custom meshes. Note: If teen model is not set, the game will use the adult model for teens. You can set "Baby", "Teen", "Adult" and or "Titan". Any model not set will reuse the og model
		"Adult": "RS_SHARED/mydragonskins/Model", // This is an asset url of the model to use
		"Titan": "RS_SHARED/mydragonskins/ModelTitan"
	},
	"RequiredAge": "TEEN", // Optional: This is the minimum age that a dragon must be to equip this saddle (Must be in all caps). If this is unset, it will default to teen
	"BabyShaders": { // Optional: This is the shader that should be used for each of the baby's materials. If not set, each part will default as described below
		// Each of these use a shader specifier:
		// • "Default" will use the standard body material. This is the only shader that can be affected by player customization
		//	◘ Texture Properties: "_BumpMap", "_ColorMask", "_DecalMap", "_DetailTex", "_EmissiveMap", "_MKGlowTex", "_SpecularMap"
		//	◘ Color Properties: "_EmissiveColor", "_MKGlowColor", "_MKGlowTexColor", "_SpecColor"
		//	◘ Number Properties: "_BumpStrength", "_DecalOpacity", "_Glossiness", "_MKGlowPower", "_MKGlowTexStrength"
		// • "Eyes" will use the standard eye material
		//	◘ Texture Properties: "_MainTex"
		//	◘ Color Properties: "_Color", "_SpecColor", "_Emission"
		//	◘ Number Properties: "_Shininess"
		// • "Extra" will use a translucent material
		//	◘ Texture Properties: "_MainTex"
		//	◘ Color Properties: "_Color", "_SpecColor", "_Emission"
		//	◘ Number Properties: "_Shininess"
		// • If you want to use your own shader loaded from an assetbundle, you can write the resource path
		// • If you want to use a different shader that's already in the game, you can just write the name like "Standard/Unlit"
		"Body": "Default", // Optional: If not set, will default to "Default"
		"Eyes": "Default", // Optional: If not set, will default to "Default"
		"Extra": "Extra", // Optional: If not set, will default to "Extra". The "extra" material will only be created if some material properties are set for it
		"IsBodyMaterial": false, // Optional: If not set, will default to false. If true, the "Body" value will be treated as a resource path to a material instead of a shader
		"IsEyesMaterial": false, // Optional: If not set, will default to false. Same as "IsBodyMaterial" but for the "Eyes" property
		"IsExtraMaterial": false // Optional: If not set, will default to false. Same as "IsBodyMaterial" but for the "Extra" property
	},
	"TeenShaders: { // Optional: Same as "BabyShaders" but applies for the teen materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"AdultShaders: { // Optional: Same as "BabyShaders" but applies for the adult materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"TitanShaders: { // Optional: Same as "BabyShaders" but applies for the titan materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"HWBabyShaders: { // Optional: Same as "BabyShaders" but applies for the hidden world baby materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"HWTeenShaders: { // Optional: Same as "BabyShaders" but applies for the hidden world teen materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"HWAdultShaders: { // Optional: Same as "BabyShaders" but applies for the hidden world adult materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	},
	"HWTitanShaders: { // Optional: Same as "BabyShaders" but applies for the hidden world titan materials
		"Body": "Default",
		"Eyes": "Default",
		"Extra": "Extra",
		"IsBodyMaterial": false,
		"IsEyesMaterial": false,
		"IsExtraMaterial": false
	}
}